using System.IO;using UnityEngine;namespace Assets.EditorResource{    public class EditorGui : MonoBehaviour    {        public Type SetType;        public Texture SetTexture;        public Texture boomTexture;        public Texture pointTexture;        public Texture crystalTexture;        public Texture ghostTexture;        public Texture pacmanTexture;        public Texture soulTexture;        public Texture wallTexture;        public Texture SaveTexture;        public Texture boomTextureSmal;        public Texture pointTextureSmal;        public Texture crystalTextureSmal;        public Texture ghostTextureSmal;        public Texture pacmanTextureSmal;        public Texture soulTextureSmal;        public Texture wallTextureSmal;        private const string backButton = "Назад";        public GUISkin Style;        void OnGUI()        {            GUILayout.BeginArea(new Rect(5,5,150,560), Style.window);            GUILayout.Space(5.0f);            if (GUILayout.Button(boomTexture, Style.button)) { SetType = Type.boom; SetTexture = boomTextureSmal; }            if (GUILayout.Button(pointTexture, Style.button)) { SetType = Type.point; SetTexture = pointTextureSmal; }            if (GUILayout.Button(crystalTexture, Style.button)) { SetType = Type.crystal; SetTexture = crystalTextureSmal; }            if (GUILayout.Button(ghostTexture, Style.button)) { SetType = Type.ghost; SetTexture = ghostTextureSmal; }            if (GUILayout.Button(pacmanTexture, Style.button)) { SetType = Type.pacman; SetTexture = pacmanTextureSmal; }            if (GUILayout.Button(soulTexture, Style.button)) { SetType = Type.soul; SetTexture = soulTextureSmal; }            if (GUILayout.Button(wallTexture, Style.button)) { SetType = Type.wall; SetTexture = wallTextureSmal; }            GUILayout.Space(5.0f);            if (GUILayout.Button(SaveTexture, Style.button))            {                 Save();                Application.LoadLevel("StartMenu");            }            if (GUILayout.Button(backButton, Style.button)) Application.LoadLevel("StartMenu");            GUILayout.EndArea();        }        private static void Save()        {            var mapsDirectory = Application.dataPath + "/maps";            var filePaths = Directory.GetFiles(mapsDirectory);                        //В редакторе будут проблемы с именованием            var s = filePaths.Length.ToString();            var file = File.Create(mapsDirectory + "/" + s + ".txt");            Debug.Log(file);            var str = new StreamWriter(file);                        var lines = FindObjectsOfType<Line>();            var arr = new int[16,16];            foreach (var child in lines)            {                foreach (Transform mpPoint in child.transform)                {                    var mp = mpPoint.gameObject.GetComponent<MapPoint>();                    switch (mp.MapPinTupe)                    {                                                    case Type.wall:                            arr[child.index, mp.Index] = 0;                            break;                        case Type.point:                            arr[child.index, mp.Index] = 1;                            break;                        case Type.ghost:                            arr[child.index, mp.Index] = 2;                            break;                        case Type.pacman:                            arr[child.index, mp.Index] = 3;                            break;                        case Type.crystal:                            arr[child.index, mp.Index] = 4;                            break;                        case Type.soul:                            arr[child.index, mp.Index] = 5;                            break;                        case Type.boom:                            arr[child.index, mp.Index] = 6;                            break;                    }                }            }            for (var i = 0; i < 16; i++)            {                var symbols = "";                for (var j = 0; j < 16; j++)                {                    symbols = symbols + arr[i, j];                }                str.WriteLine(symbols);            }                            str.Close();        }    }    public enum Type    {        boom,        point,        crystal,        ghost,        pacman,        soul,        wall,    }}